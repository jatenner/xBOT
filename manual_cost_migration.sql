-- Manual cost logging migration
-- Run this in Supabase SQL editor

BEGIN;

-- Create usage log table
CREATE TABLE IF NOT EXISTS public.openai_usage_log (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamptz NOT NULL DEFAULT now(),
  model text NOT NULL,
  cost_tier text,
  intent text,
  prompt_tokens integer NOT NULL,
  completion_tokens integer NOT NULL,
  total_tokens integer NOT NULL,
  cost_usd numeric(12,6) NOT NULL,
  request_id text,
  finish_reason text,
  raw jsonb NOT NULL DEFAULT '{}'::jsonb
);

-- Performance indexes
CREATE INDEX IF NOT EXISTS idx_openai_usage_log_created_at ON public.openai_usage_log (created_at);
CREATE INDEX IF NOT EXISTS idx_openai_usage_log_model ON public.openai_usage_log (model);

-- RPC for logging
CREATE OR REPLACE FUNCTION public.log_openai_usage(
  p_completion_tokens integer,
  p_cost_tier text,
  p_cost_usd numeric,
  p_finish_reason text,
  p_intent text,
  p_model text,
  p_prompt_tokens integer,
  p_raw jsonb,
  p_request_id text,
  p_total_tokens integer
) RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  INSERT INTO public.openai_usage_log (
    model, cost_tier, intent,
    prompt_tokens, completion_tokens, total_tokens,
    cost_usd, request_id, finish_reason, raw
  ) VALUES (
    p_model, p_cost_tier, p_intent,
    p_prompt_tokens, p_completion_tokens, p_total_tokens,
    p_cost_usd, p_request_id, p_finish_reason, p_raw
  );
END;
$$;

-- Grant permissions
GRANT EXECUTE ON FUNCTION public.log_openai_usage TO service_role;

COMMIT;
