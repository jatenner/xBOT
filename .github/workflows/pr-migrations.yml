name: 'PR Migrations - Staging Verification'

on:
  pull_request:
    branches: [main, master]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/verify/**'
      - 'scripts/smoke.sql'
      - '.github/workflows/pr-migrations.yml'

jobs:
  staging-verification:
    name: 'Verify Migrations on Staging'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Install Supabase CLI'
        run: |
          curl -fsSL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: 'Install PostgreSQL Client'
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: 'Link to Staging Project'
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
        run: |
          echo "Linking to staging project: $STAGING_PROJECT_REF"
          supabase link --project-ref "$STAGING_PROJECT_REF"

      - name: 'Apply Migrations to Staging'
        run: |
          echo "🚀 Pushing migrations to staging..."
          supabase db push

      - name: 'Run Staging Smoke Tests'
        env:
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
        run: |
          echo "🧪 Running smoke tests against staging database..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "sslmode=require host=db.$STAGING_PROJECT_REF.supabase.co dbname=postgres user=postgres" \
            -f scripts/smoke.sql

      - name: 'Run Verification Scripts'
        env:
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
        run: |
          echo "🔍 Running verification checks..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "sslmode=require host=db.$STAGING_PROJECT_REF.supabase.co dbname=postgres user=postgres" \
            -f supabase/verify/verify.sql
          
          echo "🕵️ Running drift detection..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "sslmode=require host=db.$STAGING_PROJECT_REF.supabase.co dbname=postgres user=postgres" \
            -f supabase/verify/drift_check.sql

      - name: 'Report Results'
        if: always()
        run: |
          echo "## 🎯 Staging Migration Verification" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ secrets.STAGING_PROJECT_REF }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Migrations Applied Successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Smoke Tests**: ✅ All core functionality verified" >> $GITHUB_STEP_SUMMARY
          echo "- **Schema Verification**: ✅ Tables, constraints, and data integrity confirmed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Ready for Production Promotion" >> $GITHUB_STEP_SUMMARY
          echo "This PR is ready to be merged. After merge, run the 'Promote to Production' workflow." >> $GITHUB_STEP_SUMMARY