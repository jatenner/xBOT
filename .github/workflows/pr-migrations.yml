name: PR Migrations - Staging Verify

on:
  pull_request:
    paths:
      - 'supabase/migrations/**'
      - 'scripts/smoke.sql'
      - '.github/workflows/pr-migrations.yml'

jobs:
  staging-verify:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Supabase CLI
        run: |
          curl -sSfL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify Supabase CLI
        run: supabase --version

      - name: Link to staging project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
        run: |
          echo "Linking to staging project..."
          supabase link --project-ref "$STAGING_PROJECT_REF"

      - name: Push migrations to staging
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "Applying migrations to staging..."
          supabase db push

      - name: Run smoke tests
        env:
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        run: |
          echo "Running smoke tests..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "host=db.$STAGING_PROJECT_REF.supabase.co port=5432 user=postgres dbname=postgres sslmode=require" \
            -f scripts/smoke.sql \
            -v ON_ERROR_STOP=1

      - name: Verify schema integrity
        env:
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        run: |
          echo "Verifying schema integrity..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "host=db.$STAGING_PROJECT_REF.supabase.co port=5432 user=postgres dbname=postgres sslmode=require" \
            -c "SELECT COUNT(*) as view_count FROM information_schema.views WHERE table_name LIKE 'vw_%' AND table_schema = 'public';" \
            -v ON_ERROR_STOP=1

      - name: Test basic connectivity
        env:
          STAGING_PROJECT_REF: ${{ secrets.STAGING_PROJECT_REF }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        run: |
          echo "Testing basic database connectivity..."
          PGPASSWORD="$STAGING_DB_PASSWORD" psql \
            "host=db.$STAGING_PROJECT_REF.supabase.co port=5432 user=postgres dbname=postgres sslmode=require" \
            -c "SELECT 'Migration verification complete' as status, now() as timestamp;" \
            -v ON_ERROR_STOP=1

      - name: Summary
        run: |
          echo "âœ… Staging migration verification complete"
          echo "- Migrations applied successfully"
          echo "- Smoke tests passed"
          echo "- Schema integrity verified"
          echo "- Ready for production promotion"