-- ðŸŽ¨ Generated Topics Tracking Table
-- Tracks AI-generated topics to prevent repetition and enable learning

CREATE TABLE IF NOT EXISTS generated_topics (
    id BIGSERIAL PRIMARY KEY,
    topic TEXT NOT NULL,
    cluster TEXT NOT NULL,
    keywords TEXT[] DEFAULT '{}',
    generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    used_in_post_id TEXT,
    performance_score DECIMAL(5,3),
    
    -- Indexes for fast lookups
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Index for recent topic lookups (used by diversity engine)
CREATE INDEX IF NOT EXISTS idx_generated_topics_created 
ON generated_topics(created_at DESC);

-- Index for cluster-based queries
CREATE INDEX IF NOT EXISTS idx_generated_topics_cluster 
ON generated_topics(cluster);

-- Index for topic similarity searches
CREATE INDEX IF NOT EXISTS idx_generated_topics_topic 
ON generated_topics USING gin(to_tsvector('english', topic));

-- Cleanup old tracking data (keep last 90 days)
CREATE OR REPLACE FUNCTION cleanup_old_generated_topics()
RETURNS void
LANGUAGE plpgsql
AS $$
BEGIN
    DELETE FROM generated_topics 
    WHERE created_at < NOW() - INTERVAL '90 days';
END;
$$;

COMMENT ON TABLE generated_topics IS 'Tracks AI-generated topics for diversity and learning loops';
COMMENT ON COLUMN generated_topics.topic IS 'The specific topic generated by AI';
COMMENT ON COLUMN generated_topics.cluster IS 'Health cluster (longevity, biohacking, mental_health, etc.)';
COMMENT ON COLUMN generated_topics.keywords IS 'Key terms for similarity detection';
COMMENT ON COLUMN generated_topics.performance_score IS 'Post performance score (updated after posting)';

