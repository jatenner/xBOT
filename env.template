# 🔐 XBOT ENVIRONMENT TEMPLATE
# ==========================================
# Copy this file to .env and fill in your actual values
# DO NOT commit secrets to git!

# ==========================================
# 🏗️ DEPLOYMENT ENVIRONMENT
# ==========================================
APP_ENV=production                           # production | staging | development
NODE_ENV=production

# ==========================================
# 🗄️ SUPABASE DATABASE
# ==========================================
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here
SUPABASE_DB_PASSWORD=your_database_password_here

# Environment-specific project references (for automatic DATABASE_URL resolution)
PRODUCTION_PROJECT_REF=your_prod_project_ref
STAGING_PROJECT_REF=your_staging_project_ref
PROJECT_REF=your_fallback_project_ref

# ==========================================
# 📡 DATABASE CONNECTION (SUPABASE)
# ==========================================

# RECOMMENDED: Use Session Pooler for better compatibility
# Get this from: Supabase Dashboard → Settings → Database → Connection string
# Example: postgresql://postgres:[PASSWORD]@aws-0-us-east-1.pooler.supabase.com:5432/postgres
DATABASE_URL=postgresql://postgres:your_password@aws-0-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require

# SSL Configuration (for secure connections)
DB_SSL_MODE=require
# Options: require (strict, default) | no-verify (development only)

# Optional: Path to Supabase Root CA certificate (most secure)
# Download from: Supabase Dashboard → Settings → Database → SSL → Download certificate
# DB_SSL_ROOT_CERT_PATH=./ops/supabase-ca.crt

# ==========================================
# 🚀 REDIS CACHE & BUDGET BREAKER
# ==========================================
REDIS_URL=rediss://default:password@host:port
REDIS_PREFIX=prod:
REDIS_BREAKER_ENABLED=true
REDIS_BUDGET_TTL_SECONDS=172800

# ==========================================
# 🤖 OPENAI API
# ==========================================
OPENAI_API_KEY=sk-your_openai_api_key_here

# ==========================================
# 💰 COST CONTROLS & BUDGET
# ==========================================
COST_TRACKER_ENABLED=true
DAILY_COST_LIMIT_USD=5.00                   # Hard daily cap
COST_SOFT_BUDGET_USD=3.50                   # Soft budget threshold (70% of hard limit)
COST_TRACKER_STRICT=true
COST_TRACKER_ROLLOVER_TZ=UTC

# Logging
COST_LOGGING_STORAGE=supabase
COST_LOGGING_TABLE=openai_usage_log

# ==========================================
# 🎯 BUDGET OPTIMIZER
# ==========================================
BUDGET_OPTIMIZER_ENABLED=true
BUDGET_STRATEGY=adaptive                     # adaptive | conservative
BUDGET_PEAK_HOURS=17-23                     # UTC hours for higher spending
BUDGET_MIN_RESERVE_USD=0.50                 # Emergency reserve buffer

# ==========================================
# 🔄 AUTOMATIC MIGRATIONS
# ==========================================
RUN_MIGRATIONS=true                         # Auto-run SQL migrations on startup

# ==========================================
# 🐦 TWITTER/X AUTOMATION
# ==========================================
TWITTER_SESSION_B64=your_base64_encoded_session_here

# Optional: Twitter API (if using API instead of browser automation)
TWITTER_API_KEY=your_api_key_here
TWITTER_API_SECRET=your_api_secret_here
TWITTER_ACCESS_TOKEN=your_access_token_here
TWITTER_ACCESS_TOKEN_SECRET=your_access_token_secret_here
TWITTER_BEARER_TOKEN=your_bearer_token_here

# ==========================================
# 🎭 PLAYWRIGHT BROWSER
# ==========================================
PLAYWRIGHT_FOCUS_RETRIES=4
PLAYWRIGHT_FOCUS_TIMEOUT_MS=12000
PLAYWRIGHT_REPLY_TIMEOUT_MS=12000
PLAYWRIGHT_COMPOSER_STRICT=true
PLAYWRIGHT_NAV_TIMEOUT_MS=30000
PLAYWRIGHT_MAX_CONTEXT_RETRIES=3
PLAYWRIGHT_CONTEXT_RETRY_BACKOFF_MS=2000

# ==========================================
# 🛡️ CONTENT SAFETY
# ==========================================
FACT_CHECK_MODE=light                       # off | light | strict

# ==========================================
# 🧵 THREAD CONFIGURATION
# ==========================================
THREAD_PIPELINE_ONLY=true
ENABLE_THREADS=true
THREAD_FORCE_SEGMENTS=true

# ==========================================
# 📊 MONITORING & HEALTH
# ==========================================
LOG_LEVEL=info                              # debug | info | warn | error
ENABLE_ANALYTICS_LOGGING=true

# ==========================================
# 💡 SETUP INSTRUCTIONS
# ==========================================
# 
# 1. Copy this file: cp env.template .env
# 2. Fill in your actual credentials above
# 3. For Railway deployment, set these via Railway dashboard
# 4. For local development, use env.staging-cli.sh or env.prod-cli.sh
# 
# Supabase Setup:
# - Go to https://supabase.com/dashboard
# - Project Settings > API for URL and service role key
# - Project Settings > Database for password
# 
# Redis Setup:
# - Railway Redis addon OR external Redis provider
# - Use rediss:// URL for TLS connections
# 
# OpenAI Setup:
# - https://platform.openai.com/api-keys
# - Set usage limits for cost control
